<Window x:Class="Password_Checker__Generator_and_Cracker.Password_Cracker"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:Password_Checker__Generator_and_Cracker"
        mc:Ignorable="d"
        Title="Password Cracker" Height="450" Width="950"
        xmlns:gif="http://wpfanimatedgif.codeplex.com">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="20" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="Black">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="7*"/>
            <ColumnDefinition Width="4*"/>
        </Grid.ColumnDefinitions>

        <Border Grid.Column="0">
            <Border.Effect>
                <DropShadowEffect Color="White" Opacity="0.5" ShadowDepth="5" BlurRadius="5"/>
            </Border.Effect>
            <ListBox x:Name="listPossible" Visibility="Hidden" HorizontalAlignment="Center" Height="250" VerticalAlignment="Center" Width="220" Margin="16,20,15,149"/>
        </Border>


        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="0.5*"/>
                <RowDefinition Height="0.5*"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0">
                <Label Content="Please enter your password" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="30"/>
            </Border>

            <Border Grid.Row="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.4*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0"
                          Direction="270"
                          Color="White"
                          Opacity="0.8"
                          BlurRadius="20"/>
                        </Border.Effect>
                        <TextBox x:Name="tbxEntPassword" BorderThickness="1" BorderBrush="White" FontSize="32" HorizontalAlignment="Left" TextWrapping="Wrap" VerticalAlignment="Center" Width="280" Height="45" Margin="62,0,0,0">

                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <VisualBrush>
                                                        <VisualBrush.Visual>
                                                            <TextBlock Text="Enter your password" Foreground="White" Background="Black"/>
                                                        </VisualBrush.Visual>
                                                    </VisualBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Border>
                    <Border x:Name="loadingGif" Grid.Column="1" Visibility="Hidden">
                        <Image gif:ImageBehavior.AnimatedSource="Images/loading-for-crack.gif" Margin="-17,0,17,0" />
                    </Border>
                </Grid>
            </Border>

            <Border Grid.Row="2">
                <Button x:Name="btnStart" Content="Start Cracking" HorizontalAlignment="Left" VerticalAlignment="Center" Width="155" Click="btnStart_Click" Height="43" Background="LightGreen" BorderThickness="0" FontWeight="Black" Cursor="Hand" Margin="127,0,0,0">
                    <Button.ToolTip>
                        Klick to start with the cracking process
                    </Button.ToolTip>
                </Button>
            </Border>

            <Border Grid.Row="3">
                <Label Content="" x:Name="lblAttemps" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
            </Border>

            <Border Grid.Row="4">
                <Button BorderBrush="Black" BorderThickness="2" Background="White" Visibility="Hidden" Click="btnSeeCrack_Click" x:Name="btnSeeCrack" HorizontalAlignment="Center" VerticalAlignment="Center" Height="42" Width="156" Cursor="Hand">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Images/show.png" Height="26" Width="29"/>
                        <TextBlock Height="16" Width="110" Text="See cracking process"></TextBlock>
                    </StackPanel>
                    <Button.ToolTip>
                        Klick to see the cracking process
                    </Button.ToolTip>
                </Button>
            </Border>

            <Border Grid.Row="4">
                <Button BorderBrush="Black" BorderThickness="2" Background="White" Visibility="Hidden" Click="btnHideCrack_Click" x:Name="btnHideCrack" HorizontalAlignment="Center" VerticalAlignment="Center" Height="50" Width="180" Cursor="Hand">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Images/hide.png" Height="26" Width="29"/>
                        <TextBlock Height="16" Width="117" Text="Hide cracking process"></TextBlock>
                    </StackPanel>
                    <Button.ToolTip>
                        Klick to hide the cracking process
                    </Button.ToolTip>
                </Button>
            </Border>

            <Border Grid.Row="5">
                <Button Grid.Row="3" x:Name="btnHome" Click="btnHome_Click" BorderThickness="0" Background="LightBlue" Content="Back to home" Style="{DynamicResource RoundedButtonStyle}" Cursor="Hand" Grid.Column="1" Margin="128,10">
                    <Button.ToolTip>
                        Brings you back to the home page
                    </Button.ToolTip>
                </Button>
            </Border>
        </Grid>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="0.8*"/>
                <RowDefinition Height="3.2*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>

            <Border Grid.Row="0" Background="Black" Margin="0, 16, 0, 0">
                <TextBlock TextAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" VerticalAlignment="Bottom"  Height="30" Width="197">
                    <TextBlock.Inlines>
                        <Run FontWeight="Bold" FontSize="20" Text="Important" Foreground="White"/>
                    </TextBlock.Inlines>
                </TextBlock>
            </Border>

            <Border Grid.Row="1" Background="DarkGray">
                <Border.Effect>
                    <DropShadowEffect Color="White"
                          Opacity="0.5" BlurRadius="5"/>


                </Border.Effect>
                <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Width="251" Height="223" VerticalAlignment="Top">
                    <StackPanel Margin="10">
                        <TextBlock FontSize="13" Text="Which symbols may be used?" Foreground="White" FontWeight="Bold"/>
                        <TextBlock FontSize="11" TextWrapping="Wrap">
        This application supports all characters that can be found on the keyboard (German Switzerland)
                            <LineBreak/>
    </TextBlock>
                        <TextBlock FontSize="13" Text="Waiting time" Foreground="White" FontWeight="Bold"/>
                        <TextBlock FontSize="11" Text="For three or fewer characters approximately 1s."/>
                        <TextBlock FontSize="11" Text="For four or more about 1 - 2 minutes."/>
                        <TextBlock FontSize="11" TextWrapping="Wrap">
        If the password entered contains four or more characters, the computer may crash if the computing power is too low or the program itself may no longer return any feedback according to the Task Manager.
    </TextBlock>
                    </StackPanel>
                </TextBlock>
            </Border>
        </Grid>
    </Grid>
</Window>
